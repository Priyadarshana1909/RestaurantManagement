@model RestaurantDTO.Request.AddUpdateCuisine

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Cuisine</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="RestaurantId" class="control-label"></label>
                <select asp-for="RestaurantId"
                        class="form-control"
                        asp-items="@(new SelectList(Model.Restaurants,"RestaurantID", "RestaurantName"))">
                </select>
                <span asp-validation-for="CuisineId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CuisineName" class="control-label"></label>
                <input asp-for="CuisineName" class="form-control" />
                <span asp-validation-for="CuisineName" class="text-danger"></span>
            </div>
          @*  <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDelete" /> @Html.DisplayNameFor(model => model.IsDelete)
                </label>
            </div>*@

            <div class="form-group" style="display:none;">
                <label asp-for="CuisineId" class="control-label"></label>
                <input asp-for="CuisineId" class="form-control" />
                <span asp-validation-for="CuisineId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
